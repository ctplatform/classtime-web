generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DOTW {
  Sunday
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
}

model User {
  id                 String    @id @default(uuid())
  creationTimestamp  DateTime  @default(now())
  firstName          String
  lastName           String
  preferredFirstName String?
  preferredLastName  String?
  RIN                Int       @unique
  rcsID              String    @unique
  scheduleID         String    @unique
  schedule           Schedule? @relation(fields: [scheduleID], references: [id])
  messages           Message[]
}

model Schedule {
  id               String          @id @default(uuid())
  user             User?
  courseSectionIDs String[]
  courses          CourseSection[]
}

model CourseSection {
  id  String @id @default(uuid())
  CRN Int?   @unique

  scheduleIDs String[]
  schedules   Schedule[]

  blocks CourseBlock[]

  chatRoomID String    @unique
  chatRoom   ChatRoom? @relation(fields: [chatRoomID], references: [id])
}

model CourseBlock {
  id String @id @default(uuid())

  courseSectionID String
  courseSection   CourseSection @relation(fields: [courseSectionID], references: [id])

  day       DOTW
  startTime Int
  duration  Int
}

model ChatRoom {
  id String @id @default(uuid())

  courseSection CourseSection?
  messages      Message[]
}

model Message {
  id String @id @default(uuid())

  authorID String
  author   User   @relation(fields: [authorID], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  chatRoomID String
  chatRoom   ChatRoom @relation(fields: [chatRoomID], references: [id])

  content String
}
